"""add categories in todos entities and fix error with DateTime

Revision ID: 96ba5b8b0b2f
Revises: 
Create Date: 2025-10-01 14:34:56.753316

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '96ba5b8b0b2f'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('todos', sa.Column('categories', sa.Enum('WORK', 'PERSONAL', 'STUDY', 'FITNESS', 'SHOPPING', 'HEALTH', 'HOBBY', 'OTHER', name='todo_category'), nullable=True))
    op.alter_column('todos', 'deadline',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_unique_constraint(None, 'todos', ['id'])
    op.drop_constraint(op.f('todos_user_id_fkey'), 'todos', type_='foreignkey')
    op.create_foreign_key(None, 'todos', 'users', ['user_id'], ['id'], ondelete='CASCADE')
    op.create_unique_constraint(None, 'users', ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'users', type_='unique')
    op.drop_constraint(None, 'todos', type_='foreignkey')
    op.create_foreign_key(op.f('todos_user_id_fkey'), 'todos', 'users', ['user_id'], ['id'])
    op.drop_constraint(None, 'todos', type_='unique')
    op.alter_column('todos', 'deadline',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.drop_column('todos', 'categories')
    # ### end Alembic commands ###
